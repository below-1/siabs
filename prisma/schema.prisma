// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum WorkStatus {
  WorkFromHome
  WorkFromOffice
  DinasLuar
}

enum JadwalType {
  Masuk
  Keluar
}


model Login {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  expiredAt DateTime
  token String
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model User {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  username String
  password String
  superUser Boolean
  supervisedUnitKerjas UnitKerja[] 
  pegawai         Pegawai?
  logins Login[]
  createdJadwals Jadwal[] @relation("CreatedJadwal")
}

model Pegawai {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  nama            String
  nip             String?
  nik             String
  avatar          String?
  user  User @relation(fields: [userId], references: [id])
  userId Int
  absens Absen[]
}

model UnitKerja {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  nama            String
  alamat String
  avatar String?
  latitude  String?
  longitude String?
  adminList  User[]
  jadwalList Jadwal[]
}

model Jadwal {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  createdBy User @relation("CreatedJadwal", fields: [createdById], references: [id])
  createdById Int 

  unitKerja UnitKerja @relation(fields: [unitKerjaId], references: [id])
  unitKerjaId Int

  hari  DateTime @db.Date()
  waktu  DateTime @db.Time()
  type JadwalType
}

model Absen {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  pegawai Pegawai @relation(fields: [pegawaiId], references: [id])
  pegawaiId Int
  workStatus WorkStatus
  waktu DateTime?
}
